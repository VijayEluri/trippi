<?xml version="1.0" encoding="UTF-8"?>
<project name="trippi" default="dist" basedir=".">

  <!-- TODO: target: doc
             target: checkstyle
             target: release (core-release, bin-release, src-release)
             target: kreplay??
             target: war??
  -->
               
  <property environment="env"/>

  <loadproperties srcFile="build.properties" /> 
  <loadproperties srcFile="lib/lib.properties" />
  <loadproperties srcFile="${src.dir}/java/org/trippi/Trippi.properties"/>

  <import file="${src.dir}/build/definitions.xml"/>
  <import file="${src.dir}/build/dependencies.xml"/>
  <import file="${src.dir}/build/macros.xml"/>

  <!-- core-classes -->
  <target name="core-classes" 
          description="build core classes">
    <compile-java classpathref="core.compile.classpath"
                   destdir="${core.build.dir}"
                   includes="${top.packagepath}/*,
                             ${top.packagepath}/config/**,
                             ${top.packagepath}/nodegraph/**,
                             ${top.packagepath}/io/**,
                             ${impl.packagepath}/base/**,
                             ${impl.packagepath}/multi/**,
                             ${top.packagepath}/server/**,
                             ${top.packagepath}/ui/**"/>
    <copy-resources packagepath="${top.packagepath}" 
                    destdir="${core.build.dir}"/>
  </target>
    
  <!-- kowari-classes -->
  <target name="kowari-classes" depends="core-classes">
    <build-connector classpathref="kowari.compile.classpath"
                     destdir="${kowari.build.dir}"
                     packagepath="${kowari.packagepath}"/>
  </target>

  <!-- mptstore-classes -->
  <target name="mptstore-classes" depends="core-classes">
    <build-connector classpathref="mptstore.compile.classpath"
                     destdir="${mptstore.build.dir}"
                     packagepath="${mptstore.packagepath}"/>
  </target>

  <!-- oracle-classes -->
  <target name="oracle-classes" depends="core-classes">
    <build-connector classpathref="oracle.compile.classpath"
                     destdir="${oracle.build.dir}"
                     packagepath="${oracle.packagepath}"/>
  </target>

  <!-- sesame-classes -->
  <target name="sesame-classes" depends="core-classes">
    <build-connector classpathref="sesame.compile.classpath"
                     destdir="${sesame.build.dir}"
                     packagepath="${sesame.packagepath}"/>
  </target>

  <!-- connector-classes -->
  <target name="connector-classes"
          description="build all connector classes"
          depends="kowari-classes,
                   mptstore-classes,
                   oracle-classes,
                   sesame-classes">
  </target>

  <!-- test-classes -->
  <target name="test-classes"
          description="build all test classes"
          depends="core-classes,
                   connector-classes">
    <compile-java classpathref="test.compile.classpath"
                  destdir="${test.build.dir}"
                  includes="${top.packagepath}/**"
                  srcdir="src/test"/>
  </target>

  <!-- core-jar -->
  <target name="core-jar"
          depends="core-classes"
          description="build core jar">
    <build-jar basedir="${core.build.dir}" 
               component="core" 
               mainclass="org.trippi.Trippi"/>
  </target>

  <!-- connector-jars -->
  <target name="connector-jars"
          depends="connector-classes"
          description="build jars for all connectors">
    <build-jar basedir="${kowari.build.dir}" component="kowari"/>
    <build-jar basedir="${mptstore.build.dir}" component="mptstore"/>
    <build-jar basedir="${oracle.build.dir}" component="oracle"/>
    <build-jar basedir="${sesame.build.dir}" component="sesame"/>
  </target>

  <target name="test-prep"
          depends="test-classes">
    <copy todir="${test.build.dir}">
      <fileset dir="src/test" excludes="**/*.java"/>
    </copy>
  </target>

  <!-- unit-test -->
  <target name="unit-test"
          depends="test-classes,test-prep"
          description="run all unit tests">
    <junit printsummary="no" 
           haltonfailure="yes" 
           showoutput="true" 
           filtertrace="true">
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.runtime.classpath"/>
      <sysproperty key="test.dir" value="${test.build.dir}"/>
      <test name="${unit.test}"/>
    </junit>
  </target>

  <!-- integration-test -->
  <target name="integration-test"
          depends="test-classes,test-prep"
          description="run all integration tests">
    <junit printsummary="no" 
           haltonfailure="yes" 
           showoutput="true" 
           filtertrace="true">
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.runtime.classpath"/>
      <sysproperty key="test.dir" value="${test.build.dir}"/>
      <test name="org.trippi.TrippiIntegrationTestSuite"/>
    </junit>
  </target>

  <!-- test -->
  <target name="test"
          depends="unit-test,
                   integration-test"
          description="run all unit and integration tests">
  </target>

  <!-- core-dist -->
  <target name="core-dist"
          depends="core-jar"
          description="build core dist">
    <copy-jar component="core" todir="${dist.dir}/lib"/>
    <copy todir="${dist.dir}">
      <fileset dir="." includes="${core.runtime.libs}"/>
      <fileset dir="src" includes="config/"/>
      <fileset dir="src" includes="samples/"/>
      <fileset dir="src/bin"/>
    </copy>
  </target>

  <!-- dist -->
  <target name="dist"
          depends="core-dist,
                   connector-jars"
          description="build dist with all connectors">
    <copy-jar component="kowari" todir="${dist.dir}/lib"/>
    <copy-jar component="mptstore" todir="${dist.dir}/lib"/>
    <copy-jar component="oracle" todir="${dist.dir}/lib"/>
    <copy-jar component="sesame" todir="${dist.dir}/lib"/>
    <copy todir="${dist.dir}">
      <fileset dir="." includes="${kowari.runtime.libs}"/>
      <fileset dir="." includes="${mptstore.runtime.libs}"/>
      <fileset dir="." includes="${oracle.runtime.libs}"/>
      <fileset dir="." includes="${sesame.runtime.libs}"/>
    </copy>
  </target>

  <!-- clean -->
  <target name="clean" description="remove all build-generated stuff">
    <delete dir="${build.dir}"/>
    <delete dir="dist" />
  </target>

</project>
