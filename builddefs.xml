<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".">

  <!-- set global properties for this build -->
  <property environment="env"/>

  <loadproperties srcFile="build.properties" /> 
  <loadproperties srcFile="lib/lib.properties" />

  <property name="classes.build.dir" value="${build.dir}/classes"/>

  <property name="jar.build.dir" value="${build.dir}/jars"/>

  <property name="all.build.dir" value="${classes.build.dir}/all"/>
  <property name="core.build.dir" value="${classes.build.dir}/core"/>
  <property name="kowari.build.dir" value="${classes.build.dir}/kowari"/>
  <property name="mptstore.build.dir" value="${classes.build.dir}/mptstore"/>
  <property name="oracle.build.dir" value="${classes.build.dir}/oracle"/>
  <property name="sesame.build.dir" value="${classes.build.dir}/sesame"/>

  <property name="top.packagepath" value="org/trippi"/>
  <property name="impl.packagepath" value="${top.packagepath}/impl"/>
  <property name="kowari.packagepath" value="${impl.packagepath}/kowari"/>
  <property name="mptstore.packagepath" value="${impl.packagepath}/mpt"/>
  <property name="oracle.packagepath" value="${impl.packagepath}/oracle"/>
  <property name="sesame.packagepath" value="${impl.packagepath}/sesame"/>

  <property name="war.build.dir" value="${build.dir}/war"/>

  <!-- load ${trippi.version} from properties -->
  <loadproperties srcFile="src/java/org/trippi/Trippi.properties" />

  <property name="project.name" value="trippi"/>
  <property name="project.version" value="${trippi.version}"/>

  <path id="classpath.dist">
    <pathelement path="${lib.activation}"/>
    <pathelement path="${lib.castor}"/>
    <pathelement path="${lib.commons-dbcp}"/>
    <pathelement path="${lib.commons-collections}"/>
    <pathelement path="${lib.commons-pool}"/>
    <pathelement path="${lib.dateutils}"/>
    <pathelement path="${lib.jakarta-regexp}"/>
    <pathelement path="${lib.jena}"/>
    <pathelement path="${lib.jrdf}"/>
    <pathelement path="${lib.kowari}"/>
    <pathelement path="${lib.log4j}"/>
    <pathelement path="${lib.lucene}"/>
    <pathelement path="${lib.mail}"/>
    <pathelement path="${lib.mptstore}"/>
    <pathelement path="${lib.openrdf-model}"/>
    <pathelement path="${lib.openrdf-rio}"/>
    <pathelement path="${lib.openrdf-util}"/>
    <pathelement path="${lib.oracle-jdbc}"/>
    <pathelement path="${lib.saxon}"/>
    <pathelement path="${lib.servlet-api}"/>
    <pathelement path="${lib.sesame}"/>
    <pathelement path="${lib.trove}"/>
    <pathelement path="${lib.xerces}"/>
    <pathelement path="${lib.xml-apis}"/>
    <pathelement path="${lib.xmlpull}"/>
    <pathelement path="${lib.xpp3}"/>
  </path>

  <path id="common.classpath">
    <pathelement path="${lib.jrdf}"/>
    <pathelement path="${lib.log4j}"/>
  </path>

  <path id="core.common.classpath">
    <path refid="common.classpath"/>
    <pathelement path="${lib.openrdf-model}"/>
    <pathelement path="${lib.openrdf-rio}"/>
    <pathelement path="${lib.trove}"/>
    <pathelement path="${lib.xmlpull}"/>
    <pathelement path="${lib.xpp3}"/>
  </path>

  <path id="core.compile.classpath">
    <path refid="core.common.classpath"/>
    <pathelement path="${lib.servlet-api}"/>
  </path>

  <path id="core.runtime.classpath">
    <path refid="core.common.classpath"/>
  </path>

  <pathconvert property="core.runtime.libs" 
               refid="core.runtime.classpath"
               pathsep=",">
    <map from="${basedir}${file.separator}" to=""/>
  </pathconvert>

  <path id="kowari.common.classpath">
    <path refid="common.classpath"/>
    <pathelement path="${lib.jena}"/>
    <pathelement path="${lib.kowari}"/>
  </path>

  <path id="kowari.compile.classpath">
    <path refid="kowari.common.classpath"/>
    <pathelement path="${core.build.dir}"/>
  </path>

  <path id="kowari.runtime.classpath">
    <path refid="kowari.common.classpath"/>
    <!-- TODO: justify why trippi-1.1.1-core.jar isn't here -->
    <pathelement path="${lib.activation}"/>
    <pathelement path="${lib.castor}"/>
    <pathelement path="${lib.dateutils}"/>
    <pathelement path="${lib.lucene}"/>
    <pathelement path="${lib.mail}"/>
    <pathelement path="${lib.trove}"/>
    <pathelement path="${lib.xerces}"/>
    <pathelement path="${lib.xml-apis}"/>
  </path>

  <pathconvert property="kowari.runtime.libs" 
               refid="kowari.runtime.classpath"
               pathsep=",">
    <map from="${basedir}${file.separator}" to=""/>
  </pathconvert>

  <path id="mptstore.common.classpath">
    <path refid="common.classpath"/>
    <pathelement path="${lib.commons-dbcp}"/>
    <pathelement path="${lib.mptstore}"/>
  </path>

  <path id="mptstore.compile.classpath">
    <path refid="mptstore.common.classpath"/>
    <pathelement path="${core.build.dir}"/>
  </path>

  <path id="mptstore.runtime.classpath">
    <path refid="mptstore.common.classpath"/>
    <pathelement path="${lib.commons-collections}"/>
    <pathelement path="${lib.commons-pool}"/>
  </path>

  <pathconvert property="mptstore.runtime.libs" 
               refid="mptstore.runtime.classpath"
               pathsep=",">
    <map from="${basedir}${file.separator}" to=""/>
  </pathconvert>

  <path id="oracle.common.classpath">
    <path refid="common.classpath"/>
    <pathelement path="${lib.oracle-jdbc}"/>
  </path>

  <path id="oracle.compile.classpath">
    <path refid="oracle.common.classpath"/>
    <pathelement path="${core.build.dir}"/>
  </path>

  <path id="oracle.runtime.classpath">
    <path refid="oracle.common.classpath"/>
  </path>

  <pathconvert property="oracle.runtime.libs" 
               refid="oracle.runtime.classpath"
               pathsep=",">
    <map from="${basedir}${file.separator}" to=""/>
  </pathconvert>

  <path id="sesame.common.classpath">
    <path refid="common.classpath"/>
    <pathelement path="${lib.openrdf-model}"/>
    <pathelement path="${lib.sesame}"/>
  </path>

  <path id="sesame.compile.classpath">
    <path refid="sesame.common.classpath"/>
    <pathelement path="${core.build.dir}"/>
  </path>

  <path id="sesame.runtime.classpath">
    <path refid="sesame.common.classpath"/>
  </path>

  <pathconvert property="sesame.runtime.libs" 
               refid="sesame.runtime.classpath"
               pathsep=",">
    <map from="${basedir}${file.separator}" to=""/>
  </pathconvert>

  <macrodef name="compile-java">
    <attribute name="classpathref"/>
    <attribute name="destdir"/>
    <attribute name="excludes" default=""/>
    <attribute name="includes" default=""/>
    <sequential>
      <mkdir dir="@{destdir}"/>
      <javac classpathref="@{classpathref}"
             debug="${javac.debug}"
             destdir="@{destdir}"
             excludes="@{excludes}"
             includes="@{includes}"
             optimize="${javac.optimize}"
             source="${javac.source}"
             srcdir="src/java"
             target="${javac.target}"/>
    </sequential>
  </macrodef>

  <macrodef name="copy-resources">
    <attribute name="destdir"/>
    <attribute name="packagepath"/>
    <sequential>
      <copy todir="@{destdir}">
        <fileset dir="src/java">
          <include name="@{packagepath}/*.xml"/>
          <include name="@{packagepath}/*.properties"/>
          <include name="@{packagepath}/resources/**"/>
        </fileset>
      </copy>
    </sequential>
  </macrodef>

  <macrodef name="build-connector">
    <attribute name="classpathref"/>
    <attribute name="destdir"/>
    <attribute name="packagepath"/>
    <sequential>
      <compile-java classpathref="@{classpathref}"
                    destdir="@{destdir}"
                    includes="@{packagepath}/**"/>
      <copy-resources packagepath="@{packagepath}" 
                      destdir="@{destdir}"/>
    </sequential>
  </macrodef>

  <macrodef name="build-jar">
    <attribute name="basedir"/>
    <attribute name="component"/>
    <attribute name="mainclass" default=""/>
    <sequential>
      <mkdir dir="${jar.build.dir}"/>
      <jar basedir="@{basedir}"
           destfile="${jar.build.dir}/${project.name}-${project.version}-@{component}.jar">
        <manifest>
          <attribute name="Main-Class" value="@{mainclass}"/>
        </manifest>
      </jar>
    </sequential>
  </macrodef>

  <macrodef name="copy-jar">
    <attribute name="component"/>
    <attribute name="todir"/>
    <sequential>
      <mkdir dir="@{todir}"/>
      <copy file="${jar.build.dir}/${project.name}-${project.version}-@{component}.jar"
            todir="@{todir}"/>
    </sequential>
  </macrodef>

</project>
