<?xml version="1.0" encoding="UTF-8"?>
<project name="trippi" default="dist" basedir=".">

  <import file="builddefs.xml"/>

  <target name="core" 
          description="build core classes">
    <compile-java classpathref="core.compile.classpath"
                   destdir="${core.build.dir}"
                   includes="${top.packagepath}/*,
                             ${top.packagepath}/config/**,
                             ${top.packagepath}/nodegraph/**,
                             ${top.packagepath}/io/**,
                             ${impl.packagepath}/base/**,
                             ${impl.packagepath}/multi/**,
                             ${top.packagepath}/server/**,
                             ${top.packagepath}/ui/**"/>
    <copy-resources packagepath="${top.packagepath}" 
                    destdir="${core.build.dir}"/>
  </target>
    
  <target name="kowari" depends="core">
    <build-connector classpathref="kowari.compile.classpath"
                     destdir="${kowari.build.dir}"
                     packagepath="${kowari.packagepath}"/>
  </target>

  <target name="mptstore" depends="core">
    <build-connector classpathref="mptstore.compile.classpath"
                     destdir="${mptstore.build.dir}"
                     packagepath="${mptstore.packagepath}"/>
  </target>

  <target name="oracle" depends="core">
    <build-connector classpathref="oracle.compile.classpath"
                     destdir="${oracle.build.dir}"
                     packagepath="${oracle.packagepath}"/>
  </target>

  <target name="sesame" depends="core">
    <build-connector classpathref="sesame.compile.classpath"
                     destdir="${sesame.build.dir}"
                     packagepath="${sesame.packagepath}"/>
  </target>

  <target name="core-jar"
          depends="core"
          description="build core jar">
    <build-jar basedir="${core.build.dir}" 
               component="core" 
               mainclass="org.trippi.Trippi"/>
  </target>

  <target name="connector-jars"
          depends="kowari,
                   mptstore,
                   oracle,
                   sesame"
          description="build jars for all connectors">
    <build-jar basedir="${kowari.build.dir}" component="kowari"/>
    <build-jar basedir="${mptstore.build.dir}" component="mptstore"/>
    <build-jar basedir="${oracle.build.dir}" component="oracle"/>
    <build-jar basedir="${sesame.build.dir}" component="sesame"/>
  </target>

  <target name="core-dist"
          depends="core-jar"
          description="build core dist">
    <copy-jar component="core" todir="${dist.dir}/lib"/>
    <echo message="basedir: ${basedir}"/>
    <echo message="core.runtime.libs: ${core.runtime.libs}"/>
    <copy todir="${dist.dir}">
      <fileset dir="." includes="${core.runtime.libs}"/>
      <fileset dir="src" includes="config/"/>
      <fileset dir="src" includes="samples/"/>
      <fileset dir="src/sh" includes="trippi"/>
      <fileset dir="src/bat" includes="trippi.bat"/>
    </copy>
  </target>

  <target name="dist"
          depends="core-dist,
                   connector-jars"
          description="build dist with all connectors">
    <copy-jar component="kowari" todir="${dist.dir}/lib"/>
    <copy-jar component="mptstore" todir="${dist.dir}/lib"/>
    <copy-jar component="oracle" todir="${dist.dir}/lib"/>
    <copy-jar component="sesame" todir="${dist.dir}/lib"/>
    <copy todir="${dist.dir}">
      <fileset dir="." includes="${kowari.runtime.libs}"/>
      <fileset dir="." includes="${mptstore.runtime.libs}"/>
      <fileset dir="." includes="${oracle.runtime.libs}"/>
      <fileset dir="." includes="${sesame.runtime.libs}"/>
    </copy>
  </target>

  <!-- TODO: target: doc
             target: unit-test (separate, together, etc..?)
             target: release (core-release, bin-release, src-release)
             target: kreplay??
             target: war??
       TODO: figure out how to include all the lib / path sets from
             another file?
  -->
               
  <target name="clean" description="remove all build-generated stuff">
      <delete dir="${build.dir}" />
      <delete dir="dist" />
  </target>
</project>
